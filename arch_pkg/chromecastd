#!/usr/bin/python3
import os
import time
import socket
import pychromecast as cast

# Setup Chromecast connection
chromecasts = cast.get_chromecasts()
device = next(cc for cc in chromecasts if cc.device.friendly_name == "Mei")
device.wait()
print("Chromecasts ready")

# Setup UNIX socket
socket_path = "/var/run/chromecastd/daemon.sock"

def cleanup_socket():
    try:
        os.unlink(socket_path)
    except FileNotFoundError:
        pass

cleanup_socket()
server = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
server.bind(socket_path)
server.listen(1)

# Main loop
client = None
while True:
    try:
        (client, address) = server.accept()
        sent = client.recv(16).decode()
        if device.media_controller.is_active:
            if sent == "state":
                pass
            elif sent == "toggle":
                if device.media_controller.is_playing:
                    device.media_controller.pause()
                else:
                    device.media_controller.play()
            elif sent == "play":
                device.media_controller.play()
            elif sent == "pause":
                device.media_controller.pause()
            elif sent == "volup":
                device.volume_up()
            elif sent == "voldown":
                device.volume_down()
            else:
                print("Invalid argument")

            device.wait()
            if device.media_controller.is_playing:
                client.send(b"playing")
            else:
                client.send(b"paused")
        else:
            client.send(b"idle")
        client.close()
        client = None
    except Exception as e:
        print("Error:", e)
        break

# Clean-up
print("Cleaning upâ€¦")
if client is not None:
    client.close()
cleanup_socket()
